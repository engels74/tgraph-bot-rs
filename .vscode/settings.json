{
    // Rust Language Server Configuration
    "rust-analyzer.checkOnSave.command": "clippy",
    "rust-analyzer.checkOnSave.extraArgs": ["--all-targets", "--all-features"],
    "rust-analyzer.cargo.allFeatures": true,
    "rust-analyzer.cargo.loadOutDirsFromCheck": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.cargo.runBuildScripts": true,
    "rust-analyzer.diagnostics.enable": true,
    "rust-analyzer.diagnostics.experimental.enable": true,
    "rust-analyzer.completion.addCallParenthesis": true,
    "rust-analyzer.completion.addCallArgumentSnippets": true,
    "rust-analyzer.inlayHints.enable": true,
    "rust-analyzer.inlayHints.parameterHints.enable": true,
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.inlayHints.chainingHints.enable": true,
    "rust-analyzer.lens.enable": true,
    "rust-analyzer.lens.run.enable": true,
    "rust-analyzer.lens.debug.enable": true,
    "rust-analyzer.lens.implementations.enable": true,
    "rust-analyzer.lens.references.enable": true,
    "rust-analyzer.hover.actions.enable": true,
    "rust-analyzer.hover.documentation.enable": true,
    "rust-analyzer.hover.links.enable": true,
    "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
    "rust-analyzer.workspace.symbol.search.kind": "all_symbols",
    
    // Editor Configuration
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.codeActionsOnSave": {
        "source.fixAll.rust": true,
        "source.organizeImports": true
    },
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.rulers": [100],
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100,
    "editor.semanticHighlighting.enabled": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.guides.indentation": true,
    
    // File Configuration
    "files.autoSave": "onFocusChange",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.exclude": {
        "**/target": true,
        "**/.cargo": true,
        "**/node_modules": true
    },
    "files.watcherExclude": {
        "**/target/**": true,
        "**/.cargo/**": true
    },
    
    // Language Specific Settings
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true,
        "editor.semanticHighlighting.enabled": true,
        "editor.suggest.insertMode": "replace"
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml",
        "editor.formatOnSave": true
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.formatOnSave": true,
        "editor.tabSize": 2
    },
    "[json]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.tabSize": 2
    },
    "[markdown]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 80
    },
    
    // Terminal Configuration
    "terminal.integrated.shell.linux": "/bin/bash",
    "terminal.integrated.env.linux": {
        "RUST_BACKTRACE": "1"
    },
    
    // Testing Configuration
    "testing.automaticallyOpenPeekView": "never",
    "testing.openTesting": "neverOpen",
    
    // Git Configuration
    "git.autofetch": true,
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    
    // Discord Bot Development
    "discord.enabled": false,
    
    // Project Specific
    "search.exclude": {
        "**/target": true,
        "**/Cargo.lock": true,
        "**/.git": true,
        "**/node_modules": true
    },
    
    // Performance Configuration
    "extensions.ignoreRecommendations": false,
    "typescript.preferences.includePackageJsonAutoImports": "off",
    "javascript.preferences.includePackageJsonAutoImports": "off",
    
    // Error Lens Configuration (if installed)
    "errorLens.enabledDiagnosticLevels": ["error", "warning"],
    "errorLens.delay": 500,
    
    // Todo Tree Configuration (if installed)
    "todo-tree.general.tags": [
        "TODO",
        "FIXME", 
        "HACK",
        "BUG",
        "NOTE",
        "XXX",
        "PERF",
        "OPTIMIZE"
    ],
    "todo-tree.highlights.defaultHighlight": {
        "icon": "alert",
        "type": "tag"
    }
} 